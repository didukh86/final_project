{"version":3,"sources":["webpack:///./node_modules/primeng/button.js","webpack:///./node_modules/primeng/chart.js","webpack:///./node_modules/primeng/multiselect.js","webpack:///./src/app/models/chartColors.ts","webpack:///./src/app/progress/progress-routing.module.ts","webpack:///./src/app/progress/progress.module.ts","webpack:///./src/app/progress/progress/progress.component.html","webpack:///./src/app/progress/progress/progress.component.scss","webpack:///./src/app/progress/progress/progress.component.ts","webpack:///./src/app/services/marks.service.ts","webpack:///./src/app/services/pageTitle.service.ts"],"names":[],"mappings":"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","file":"progress-progress-module.js","sourcesContent":["/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/button/button\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/chart/chart\"));","/* Shorthand */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/multiselect/multiselect\"));","export class ChartColor {\n  private colors = [\n    'green',\n    'red',\n    'orange',\n    'blue',\n    'purple',\n    'mediumslateblue',\n    'lightcoral',\n    'mediumvioletred',\n    'steelblue'\n  ];\n  private count = -1;\n\n  getColor() {\n    if (this.count === this.colors.length - 1) {\n      this.count = -1;\n    }\n    this.count++;\n    return this.colors[this.count];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProgressComponent } from './progress/progress.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProgressComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProgressRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule } from '@angular/forms';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ButtonModule } from 'primeng/button';\nimport { ChartModule } from 'primeng/chart';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { CardModule } from 'primeng/card';\n\nimport { ProgressRoutingModule } from './progress-routing.module';\nimport { ProgressComponent } from './progress/progress.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProgressRoutingModule,\n    DropdownModule,\n    FormsModule,\n    CalendarModule,\n    ButtonModule,\n    ChartModule,\n    MultiSelectModule,\n    RadioButtonModule,\n    CardModule\n  ],\n  declarations: [ProgressComponent]\n})\nexport class ProgressModule {}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"title\\\">\\n    <span>\\n      <h2 class=\\\"stat\\\">Статистика <i class=\\\"fas fa-chart-line\\\"></i></h2>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"flex-container\\\">\\n    <p-card class=\\\"data\\\">\\n      <p-dropdown\\n        [options]=\\\"years\\\"\\n        placeholder=\\\"Виберіть рік\\\"\\n        [(ngModel)]=\\\"selectedYear\\\"\\n        (onChange)=\\\"onYearChange()\\\"\\n        [showClear]=\\\"true\\\"\\n      ></p-dropdown>\\n\\n      <p-calendar\\n        class=\\\"calendar\\\"\\n        [(ngModel)]=\\\"start\\\"\\n        [locale]=\\\"ua\\\"\\n        placeholder=\\\"Початок періоду\\\"\\n        dateFormat=\\\"yy.mm.dd\\\"\\n        [showIcon]=\\\"true\\\"\\n      ></p-calendar>\\n\\n      <p-calendar\\n        class=\\\"calendar\\\"\\n        [(ngModel)]=\\\"end\\\"\\n        [locale]=\\\"ua\\\"\\n        dateFormat=\\\"yy.mm.dd\\\"\\n        placeholder=\\\"Кінець періоду\\\"\\n        [showIcon]=\\\"true\\\"\\n        [defaultDate]=\\\"defaultDate\\\"\\n      ></p-calendar>\\n      <div class=\\\"radio\\\">\\n        <p-radioButton\\n          label=\\\"Успішність класів по предмету\\\"\\n          name=\\\"chartGroup\\\"\\n          value=\\\"class-subject\\\"\\n          [(ngModel)]=\\\"selectedChartsType\\\"\\n          (onClick)=\\\"onDataReset()\\\"\\n        ></p-radioButton>\\n        <p-radioButton\\n          label=\\\"Успішність класів\\\"\\n          name=\\\"chartGroup\\\"\\n          value=\\\"class\\\"\\n          [(ngModel)]=\\\"selectedChartsType\\\"\\n          (onClick)=\\\"onDataReset()\\\"\\n        ></p-radioButton>\\n        <p-radioButton\\n          label=\\\"Успішність учнів\\\"\\n          name=\\\"chartGroup\\\"\\n          value=\\\"student\\\"\\n          [(ngModel)]=\\\"selectedChartsType\\\"\\n          (onClick)=\\\"onDataReset()\\\"\\n        ></p-radioButton>\\n\\n        <p-multiSelect\\n          class=\\\"group\\\"\\n          *ngIf=\\\"\\n            (selectedYear && selectedChartsType === 'class') ||\\n            (selectedYear && selectedChartsType === 'class-subject')\\n          \\\"\\n          [options]=\\\"visibleGroups\\\"\\n          [(ngModel)]=\\\"selectedGroups\\\"\\n          (onChange)=\\\"onClassChange($event)\\\"\\n          optionLabel=\\\"className\\\"\\n          [panelStyle]=\\\"{ minWidth: '15em' }\\\"\\n          defaultLabel=\\\"Виберіть клас\\\"\\n          selectedItemsLabel=\\\"Вибрано {0} класів\\\"\\n        ></p-multiSelect>\\n\\n        <p-dropdown\\n          class=\\\"group\\\"\\n          *ngIf=\\\"selectedYear && selectedChartsType === 'student'\\\"\\n          [options]=\\\"visibleGroups\\\"\\n          [(ngModel)]=\\\"selectedGroup\\\"\\n          (onChange)=\\\"onClassChange($event)\\\"\\n          placeholder=\\\"Виберіть клас\\\"\\n          optionLabel=\\\"className\\\"\\n          [showClear]=\\\"true\\\"\\n        ></p-dropdown>\\n\\n        <p-dropdown\\n          class=\\\"subject\\\"\\n          *ngIf=\\\"\\n            selectedGroup ||\\n            (selectedChartsType === 'class-subject' && selectedGroups)\\n          \\\"\\n          [options]=\\\"visibleSubjects\\\"\\n          [(ngModel)]=\\\"selectedSubjects\\\"\\n          (onChange)=\\\"onSubjectChange()\\\"\\n          placeholder=\\\"Виберіть предмет\\\"\\n          [showClear]=\\\"true\\\"\\n        ></p-dropdown>\\n\\n        <p-multiSelect\\n          class=\\\"student\\\"\\n          *ngIf=\\\"selectedGroup && selectedChartsType === 'student'\\\"\\n          [options]=\\\"visibleStudents\\\"\\n          [(ngModel)]=\\\"selectedStudents\\\"\\n          (onChange)=\\\"onStudentChange($event)\\\"\\n          [panelStyle]=\\\"{ minWidth: '13em' }\\\"\\n          defaultLabel=\\\"Виберіть учня\\\"\\n          selectedItemsLabel=\\\"Вибрано {0} учнів \\\"\\n        ></p-multiSelect>\\n\\n        <p-button\\n          class=\\\"showData\\\"\\n          icon=\\\"pi pi-check\\\"\\n          [disabled]=\\\"isButtonDisabled\\\"\\n          (onClick)=\\\"onClickShow()\\\"\\n          label=\\\"Показати оцінки\\\"\\n        ></p-button>\\n      </div>\\n    </p-card>\\n    <p-card class=\\\"chart\\\">\\n      <h3 class=\\\"averageMark\\\">\\n        Середня оцінка учня по предмету: {{ average | number: '.1-2' }}\\n      </h3>\\n\\n      <h3 class=\\\"averageMark\\\">\\n        Середня оцінка учня по всіх предметах:\\n        {{ avgMarkAllSubjects | number: '.1-2' }}\\n      </h3>\\n      <p-chart\\n        type=\\\"bar\\\"\\n        height=\\\"350px\\\"\\n        [data]=\\\"chartMarks\\\"\\n        [options]=\\\"chartOptions\\\"\\n      ></p-chart>\\n    </p-card>\\n  </div>\\n</div>\\n\"","module.exports = \".title {\\n  margin-top: 78px;\\n  text-align: center;\\n  background-color: lightblue;\\n  height: 45px;\\n  border: 1px solid #77bcf5; }\\n\\n.stat {\\n  margin-top: 5px;\\n  font-family: 'Open Sans', 'Helvetica Neue', sans-serif;\\n  font-size: 22px;\\n  font-weight: normal; }\\n\\np-radioButton {\\n  display: block;\\n  margin-top: 2%;\\n  margin-bottom: 2%;\\n  font-family: 'Open Sans', 'Helvetica Neue', sans-serif; }\\n\\n.averageMark {\\n  font-family: 'Open Sans', 'Helvetica Neue', sans-serif;\\n  font-size: 14px;\\n  font-weight: normal;\\n  margin-left: 5%; }\\n\\n.flex-container {\\n  display: flex;\\n  flex-wrap: nowrap; }\\n\\n.data {\\n  display: block;\\n  width: 20%;\\n  margin-top: 1%;\\n  margin-left: 1.5%; }\\n\\n.chart {\\n  display: block;\\n  width: 75%;\\n  margin-top: 1%;\\n  margin-left: 1.5%; }\\n\\n:host ::ng-deep .ui-calendar {\\n  display: block;\\n  margin-top: 4%; }\\n\\n:host ::ng-deep .showData .ui-button {\\n  margin-top: 4%; }\\n\\n.radio {\\n  margin-top: 5%; }\\n\\n.subject,\\n.student,\\n.group {\\n  display: block;\\n  margin-top: 4%;\\n  margin-bottom: 3%; }\\n\\n:host ::ng-deep .data .ui-card {\\n  height: 460px; }\\n\\n@media screen and (max-width: 400px) {\\n  .data {\\n    width: 100%;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  .chart {\\n    width: 100%;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  .flex-container {\\n    display: flex;\\n    flex-wrap: wrap; } }\\n\\n@media screen and (min-width: 401px) and (max-width: 1260px) {\\n  .data {\\n    width: 100%;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  .chart {\\n    width: 100%;\\n    margin-left: 0;\\n    margin-right: 0; }\\n  .flex-container {\\n    display: flex;\\n    flex-wrap: wrap; }\\n  .subject,\\n  .student,\\n  .group,\\n  .radio,\\n  :host ::ng-deep .ui-calendar {\\n    margin-top: 2%;\\n    margin-bottom: 2%; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9kaWR1a2g4Ni9maW5hbF9wcm9qZWN0L3NyYy9hcHAvcHJvZ3Jlc3MvcHJvZ3Jlc3MvcHJvZ3Jlc3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLDJCQUEyQjtFQUMzQixZQUFZO0VBQ1oseUJBQW9DLEVBQUE7O0FBRXRDO0VBQ0UsZUFBZTtFQUNmLHNEQUFzRDtFQUN0RCxlQUFlO0VBQ2YsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsY0FBYztFQUNkLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsc0RBQXNELEVBQUE7O0FBSXhEO0VBQ0Usc0RBQXNEO0VBQ3RELGVBQWU7RUFDZixtQkFBbUI7RUFDbkIsZUFBZSxFQUFBOztBQUdqQjtFQUNFLGFBQWE7RUFDYixpQkFBaUIsRUFBQTs7QUFJbkI7RUFDRSxjQUFjO0VBQ2QsVUFBVTtFQUNWLGNBQWM7RUFDZCxpQkFBaUIsRUFBQTs7QUFJbkI7RUFDRSxjQUFjO0VBQ2QsVUFBVTtFQUNWLGNBQWM7RUFDZCxpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxjQUFjO0VBQ2QsY0FBYyxFQUFBOztBQUloQjtFQUNFLGNBQWMsRUFBQTs7QUFJaEI7RUFDRSxjQUFjLEVBQUE7O0FBSWhCOzs7RUFHRSxjQUFjO0VBQ2QsY0FBYztFQUNkLGlCQUFpQixFQUFBOztBQUluQjtFQUNFLGFBQWEsRUFBQTs7QUFHZjtFQUNFO0lBQ0UsV0FBVztJQUNYLGNBQWM7SUFDZCxlQUFlLEVBQUE7RUFFakI7SUFDRSxXQUFXO0lBQ1gsY0FBYztJQUNkLGVBQWUsRUFBQTtFQUVqQjtJQUNFLGFBQWE7SUFDYixlQUFlLEVBQUEsRUFDaEI7O0FBR0g7RUFDRTtJQUNFLFdBQVc7SUFDWCxjQUFjO0lBQ2QsZUFBZSxFQUFBO0VBRWpCO0lBQ0UsV0FBVztJQUNYLGNBQWM7SUFDZCxlQUFlLEVBQUE7RUFFakI7SUFDRSxhQUFhO0lBQ2IsZUFBZSxFQUFBO0VBRWpCOzs7OztJQUtFLGNBQWM7SUFDZCxpQkFBaUIsRUFBQSxFQUNsQiIsImZpbGUiOiJzcmMvYXBwL3Byb2dyZXNzL3Byb2dyZXNzL3Byb2dyZXNzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlIHtcbiAgbWFyZ2luLXRvcDogNzhweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XG4gIGhlaWdodDogNDVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDExOSwgMTg4LCAyNDUpO1xufVxuLnN0YXQge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgJ0hlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAyMnB4O1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG5wLXJhZGlvQnV0dG9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDIlO1xuICBtYXJnaW4tYm90dG9tOiAyJTtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xufVxuXG4vLyBhdmVyYWdlIG1hcmtzXG4uYXZlcmFnZU1hcmsge1xuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsICdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbWFyZ2luLWxlZnQ6IDUlO1xufVxuXG4uZmxleC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IG5vd3JhcDtcbn1cblxuLy8gc3R5bGVzIGZvciBkYXRhIGNvbnRhaW5lclxuLmRhdGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDIwJTtcbiAgbWFyZ2luLXRvcDogMSU7XG4gIG1hcmdpbi1sZWZ0OiAxLjUlO1xufVxuXG4vLyBzdHlsZXMgZm9yIGNoYXJ0IGNvbnRhaW5lclxuLmNoYXJ0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiA3NSU7XG4gIG1hcmdpbi10b3A6IDElO1xuICBtYXJnaW4tbGVmdDogMS41JTtcbn1cblxuOmhvc3QgOjpuZy1kZWVwIC51aS1jYWxlbmRhciB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiA0JTtcbn1cblxuLy8gYnV0dG9uIHNob3cgZGF0YVxuOmhvc3QgOjpuZy1kZWVwIC5zaG93RGF0YSAudWktYnV0dG9uIHtcbiAgbWFyZ2luLXRvcDogNCU7XG59XG5cbi8vIGNvbnRhaW5lciBmb3IgcmFkaW8tYnV0dG9uc1xuLnJhZGlvIHtcbiAgbWFyZ2luLXRvcDogNSU7XG59XG5cbi8vIGxpc3Qgb2Ygc3ViamVjdHMsIHN0dWRlbnRzLCBjbGFzc2VzXG4uc3ViamVjdCxcbi5zdHVkZW50LFxuLmdyb3VwIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDQlO1xuICBtYXJnaW4tYm90dG9tOiAzJTtcbn1cblxuLy8gZGF0YSBjYXJkXG46aG9zdCA6Om5nLWRlZXAgLmRhdGEgLnVpLWNhcmQge1xuICBoZWlnaHQ6IDQ2MHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xuICAuZGF0YSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5jaGFydCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICB9XG4gIC5mbGV4LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDAxcHgpIGFuZCAobWF4LXdpZHRoOiAxMjYwcHgpIHtcbiAgLmRhdGEge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxuICAuY2hhcnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi1yaWdodDogMDtcbiAgfVxuICAuZmxleC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICB9XG4gIC5zdWJqZWN0LFxuICAuc3R1ZGVudCxcbiAgLmdyb3VwLFxuICAucmFkaW8sXG4gIDpob3N0IDo6bmctZGVlcCAudWktY2FsZW5kYXIge1xuICAgIG1hcmdpbi10b3A6IDIlO1xuICAgIG1hcmdpbi1ib3R0b206IDIlO1xuICB9XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdmingroupsService } from 'src/app/services/admingroups.service';\nimport { MarksService } from 'src/app/services/marks.service';\nimport { AdminSubjectsService } from 'src/app/services/admin-subjects.service';\nimport { StudentsService } from 'src/app/services/admin-students.service';\nimport { SelectItem } from 'primeng/api';\nimport { Group } from '../../../app/models/group.model';\nimport { Subject } from 'src/app/models/subjects.model';\nimport { DatePipe, formatDate } from '@angular/common';\nimport { TeachersService } from 'src/app/services/teachers.service';\nimport { DataSharingService } from 'src/app/services/data-sharing.service';\nimport { ChartColor } from 'src/app/models/chartColors';\nimport { SubjectSubscriber } from 'rxjs/internal/Subject';\nimport { ValueConverter } from '@angular/compiler/src/render3/view/template';\nimport { PageTitleService } from '../../services/pageTitle.service';\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss'],\n  providers: [PageTitleService]\n})\nexport class ProgressComponent implements OnInit {\n  years: SelectItem[];\n  groups: Group[];\n  subjects: Subject[];\n  classID: number;\n  selectedGroups: Group[];\n  selectedGroup: Group;\n  selectedYear: any;\n  selectedDate: Date;\n  selectedStudents: any[];\n  selectedSubjects: any;\n  visibleStudents: SelectItem[];\n  visibleSubjects: SelectItem[];\n  visibleGroups: Group[];\n  start: Date;\n  end: Date;\n  marks: any;\n  disabled = true;\n  average: number;\n  ua: any;\n  avgMark: number[];\n  avgMarkAllSubjects: number;\n  isButtonDisabled: boolean;\n  selectedChartsType = 'student';\n  chartMarks: any;\n\n  chartOptions: any;\n  defaultDate = new Date();\n  color = new ChartColor();\n  collectedStudents: any;\n  collectedAvgMarks: any;\n\n  constructor(\n    private groupService: AdmingroupsService,\n    private notificationToasts: DataSharingService,\n    private _subjectsService: AdminSubjectsService,\n    private studentService: StudentsService,\n    private marksService: MarksService,\n    private _teacherServices: TeachersService,\n    private pageTitle: PageTitleService\n  ) {\n    this.isButtonDisabled = true;\n    this.visibleGroups = new Array<Group>();\n    this.visibleStudents = new Array<SelectItem>();\n    this.chartOptions = {\n      responsive: true,\n      maintainAspectRatio: false,\n      animation: {\n        duration: 0\n      },\n      hover: {\n        animationDuration: 0\n      },\n      responsiveAnimationDuration: 0,\n      scales: {\n        yAxes: [\n          {\n            display: true,\n            ticks: {\n              beginAtZero: true,\n              stepValue: 1,\n              max: 12\n            },\n            scaleLabel: {\n              display: true,\n              labelString: 'Оцінка'\n            }\n          }\n        ],\n        xAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: 'Період'\n            }\n          }\n        ]\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.pageTitle.setTitle('Католицька Школа - Статистика');\n    this.calendar();\n\n    this.groupService.getClasses().subscribe(data => {\n      this.groups = data;\n      this.visibleGroups = this.groups.filter(g => g.isActive);\n      const allYears = data.map(group => group.classYear);\n      const uniqueYears = allYears\n        .filter((value, index, self) => self.indexOf(value) === index)\n        .sort();\n      this.years = uniqueYears.map(year => ({\n        label: year.toString(),\n        value: year\n      }));\n    });\n  }\n\n  // writing everage marks to the chartMarks object for each selected student\n  setMarksByStudentBySubject(\n    servData,\n    firstname,\n    lastname,\n    startDate,\n    endDate\n  ) {\n    const marksData = [];\n    let sum = 0;\n    let averageMark = 0;\n    // count the average mark\n    if (servData.length !== 0) {\n      servData.forEach((value: any) => {\n        sum += value.y;\n      });\n      averageMark = sum / servData.length;\n    }\n    marksData.push(averageMark.toFixed(2));\n\n    // saving already loaded datasets into a local variable to update full chartMarks later\n    const datasetsLocal = this.chartMarks.datasets;\n    datasetsLocal.push({\n      label: firstname + ' ' + lastname,\n      data: marksData,\n      backgroundColor: this.color.getColor(),\n      borderColor: 'white'\n    });\n\n    // format start and end of period\n    const pipe = new DatePipe('en-US');\n    startDate = pipe.transform(startDate, 'dd.MM.yyyy');\n    endDate = pipe.transform(endDate, 'dd.MM.yyyy');\n\n    // sort average marks to show from the the biggest to the lowest\n    const newDatasetsLocal = datasetsLocal.sort(this.sortAverageMarks);\n\n    // fully update chartMarks\n    this.chartMarks = {\n      labels: [`${startDate} - ${endDate}`],\n      datasets: newDatasetsLocal\n    };\n  }\n\n  sortAverageMarks(b, a) {\n    return a.data - b.data;\n  }\n\n  // showing toast-message for students who do not have marks\n  showToasts(servData, firstname, lastname) {\n    if (servData.length === 0) {\n      this.notificationToasts.notify(\n        'warn',\n        '',\n        ` Для учня ${firstname} ${lastname} за даний період оцінки відсутні`\n      );\n    }\n  }\n\n  getAverageStudentMark(servData) {\n    // find average student mark by subject\n    return (\n      servData.find(item => item.subjectId === this.selectedSubjects.subjectId)\n        .avgMark || 0\n    );\n  }\n\n  countAverageStudentMark(servData) {\n    let sumOfStudentMarks = 0;\n    let avrStudentMark = 0;\n\n    // count student average mark\n    if (servData.length !== 0) {\n      servData.forEach((value: any) => {\n        sumOfStudentMarks += value.avgMark;\n      });\n      avrStudentMark = sumOfStudentMarks / servData.length;\n    }\n    return avrStudentMark;\n  }\n\n  collectStudentMark(avrStudMark, className, startDate, endDate) {\n    // push the average student mark to this.collectedAvgMarks object as array element\n    if (this.collectedAvgMarks[className] === undefined) {\n      this.collectedAvgMarks[className] = [];\n    }\n    if (avrStudMark !== 0) {\n      this.collectedAvgMarks[className].push(avrStudMark.toFixed(2));\n    }\n\n    // update chart data after receiving each student data\n    this.updateChartWithCollectedData(startDate, endDate);\n  }\n\n  countAverageClassMark(marks, className) {\n    let avrSum = 0;\n\n    // count average class mark and write it to the object as array\n    marks[className].forEach((avgStudMark: any) => {\n      avrSum += Number(avgStudMark);\n    });\n    if (avrSum !== 0) {\n      avrSum = avrSum / marks[className].length;\n    }\n    return [avrSum.toFixed(2)];\n  }\n\n  updateChartWithCollectedData(startDate, endDate) {\n    const chartData = {};\n    Object.keys(this.collectedAvgMarks).forEach((group: any) => {\n      chartData[group] = this.countAverageClassMark(\n        this.collectedAvgMarks,\n        group\n      );\n    }),\n      this.showChart(chartData, startDate, endDate);\n  }\n\n  showChart(averageClassMarks, startDate, endDate) {\n    const datasetsLocal = [];\n\n    Object.keys(averageClassMarks).forEach((className: any) => {\n      datasetsLocal.push({\n        label: className,\n        data: averageClassMarks[className],\n        backgroundColor: this.color.getColor(),\n        borderColor: 'white'\n      });\n    });\n\n    // format start and end of period\n    const pipe = new DatePipe('en-US');\n    startDate = pipe.transform(startDate, 'dd.MM.yyyy');\n    endDate = pipe.transform(endDate, 'dd.MM.yyyy');\n\n    // sort average marks to show from the biggest to the lowest\n    const newDatasetsLocal = datasetsLocal.sort(this.sortAverageMarks);\n\n    // fully update chartMarks\n    this.chartMarks = {\n      labels: [`${startDate} - ${endDate}`],\n      datasets: newDatasetsLocal\n    };\n  }\n\n  onClickShow() {\n    const pipe = new DatePipe('en-US');\n    const startStr = pipe.transform(this.start, 'yyyy-MM-dd');\n    const endStr = pipe.transform(this.end, 'yyyy-MM-dd');\n\n    this.chartMarks = {\n      labels: [],\n      datasets: []\n    };\n\n    // get average marks by selected class and all subjects\n    if (this.selectedGroups && !this.selectedSubjects) {\n      this.collectedAvgMarks = {};\n\n      // this.collectedStudents an object of studens of selected classes\n      Object.keys(this.collectedStudents).forEach((className: any) => {\n        this.collectedStudents[className][0].forEach((student: any) => {\n          this.marksService\n            .getAvgMarks(student.id, startStr, endStr)\n            .subscribe(avgStudentMarks => {\n              this.collectStudentMark(\n                this.countAverageStudentMark(avgStudentMarks),\n                className,\n                startStr,\n                endStr\n              );\n            });\n        });\n      });\n    }\n\n    // get average marks by selected class and selected subject\n    if (this.selectedGroups && this.selectedSubjects) {\n      this.collectedAvgMarks = {};\n\n      // this.collectedStudents an object of studens of selected classes\n      Object.keys(this.collectedStudents).forEach((className: any) => {\n        this.collectedStudents[className][0].forEach((student: any) => {\n          this.marksService\n            .getAvgMarks(student.id, startStr, endStr)\n            .subscribe(avgStudentMarks => {\n              this.collectStudentMark(\n                this.getAverageStudentMark(avgStudentMarks),\n                className,\n                startStr,\n                endStr\n              );\n            });\n        });\n      });\n    }\n\n    // getting data for each selected student\n    if (this.selectedGroup && this.selectedStudents) {\n      this.selectedStudents.forEach((item: any) => {\n        this.marksService\n          .getMarks(\n            startStr,\n            endStr,\n            this.selectedSubjects.subjectId,\n            this.selectedGroup.id,\n            item.id\n          )\n          .subscribe(data => {\n            this.setMarksByStudentBySubject(\n              data,\n              item.firstname,\n              item.lastname,\n              startStr,\n              endStr\n            );\n            this.showToasts(data, item.firstname, item.lastname);\n          });\n      });\n    }\n\n    if (this.selectedGroup && this.selectedStudents.length === 1) {\n      this.marksService\n        .getAvgMarks(this.selectedStudents[0].id, startStr, endStr)\n        .subscribe(data => {\n          this.avgMark = data;\n          this.avgMarkAllSubjects = this.StudentAverageMark(\n            data.map(mark => mark.avgMark)\n          );\n          const subject = data.find(\n            i => i.subjectId === this.selectedSubjects.subjectId\n          );\n          this.average = subject ? subject.avgMark : null;\n        });\n    }\n    // reset average marks when selected more than one student\n    this.average = null;\n    this.avgMarkAllSubjects = null;\n  }\n\n  onSubjectChange() {\n    this.updateIsButtonDisabled();\n  }\n\n  onYearChange() {\n    if (this.selectedYear) {\n      this.start = new Date(this.selectedYear, 0);\n      this.end =\n        new Date().getFullYear() === this.selectedYear\n          ? new Date()\n          : new Date(this.selectedYear, 1);\n      this.visibleGroups = this.visibleGroups.filter(\n        g => g.classYear === this.selectedYear\n      );\n    } else {\n      this.visibleGroups = new Array<Group>();\n      this.start = null;\n      this.end = null;\n      this.average = null;\n      this.avgMarkAllSubjects = null;\n    }\n    this.selectedGroup = null;\n    this.onClassChange();\n    this.updateIsButtonDisabled();\n  }\n\n  onStudentChange() {\n    this.updateIsButtonDisabled();\n  }\n\n  // write all subjects into this.visibleSubjects by selected classes\n  getSubjects(servData, subjectArr) {\n    servData.forEach((value: any) => {\n      subjectArr.push(value);\n    });\n\n    const subjects = subjectArr.map(function(subject) {\n      return {\n        label: `${subject.subjectName}`,\n        value: subject\n      };\n    });\n    this.visibleSubjects = this.findUniqueSubjects(subjects);\n    this.updateIsButtonDisabled();\n  }\n\n  getStudents(servData, collectedStudents, className) {\n    if (collectedStudents[className] === undefined) {\n      collectedStudents[className] = [];\n    }\n    collectedStudents[className].push(servData);\n  }\n\n  // filter array of subjects\n  findUniqueSubjects(arr) {\n    const result = [];\n\n    nextInput: for (let i = 0; i < arr.length; i++) {\n      const obj = arr[i].label;\n      for (let j = 0; j < result.length; j++) {\n        if (result[j].label === obj) {\n          continue nextInput;\n        }\n      }\n      result.push(arr[i]);\n    }\n    return result;\n  }\n\n  onClassChange() {\n    if (this.selectedGroup) {\n      this._subjectsService\n        .getSubjectsListForClass(this.selectedGroup.id)\n        .subscribe(data => {\n          this.visibleSubjects = data.map(function(subject) {\n            return {\n              label: `${subject.subjectName}`,\n              value: subject\n            };\n          });\n        });\n      this.visibleStudents = new Array<SelectItem>();\n      this.studentService.getStudents(this.selectedGroup.id).subscribe(data => {\n        this.visibleStudents = data.map(function(student) {\n          return {\n            label: `${student.firstname} ${student.lastname}`,\n            value: student\n          };\n        });\n      });\n    } else {\n      this.visibleStudents = new Array<SelectItem>();\n      this.visibleSubjects = null;\n    }\n    this.selectedStudents = null;\n    this.updateIsButtonDisabled();\n\n    if (this.selectedGroups) {\n      this.collectedStudents = {};\n      const subjects = [];\n      // get subjects for each selected group\n      this.selectedGroups.forEach((item: any) => {\n        this._subjectsService\n          .getSubjectsListForClass(item.id)\n          .subscribe(data => {\n            this.getSubjects(data, subjects);\n          });\n\n        // get students of selected classes\n        this.studentService.getStudents(item.id).subscribe(data => {\n          this.getStudents(data, this.collectedStudents, item.className);\n        });\n      });\n    } else {\n      this.visibleStudents = new Array<SelectItem>();\n      this.visibleSubjects = null;\n    }\n    this.selectedStudents = null;\n    this.updateIsButtonDisabled();\n  }\n\n  onDataReset() {\n    this.selectedGroups = null;\n    this.selectedGroup = null;\n    this.visibleStudents = new Array<SelectItem>();\n    this.selectedSubjects = null;\n    this.chartMarks = {\n      labels: [],\n      datasets: []\n    };\n    this.updateIsButtonDisabled();\n  }\n\n  StudentAverageMark(marks): number {\n    let summ = 0;\n    for (let i = 0; i < marks.length; i++) {\n      summ += marks[i];\n    }\n    return summ / marks.length;\n  }\n\n  calendar(): void {\n    this._teacherServices.currentCalendar.subscribe(data => (this.ua = data));\n  }\n\n  updateIsButtonDisabled() {\n    this.isButtonDisabled =\n      !(\n        this.selectedChartsType === 'class' &&\n        this.selectedGroups != null &&\n        this.selectedYear != null\n      ) &&\n      !(\n        this.selectedChartsType === 'student' &&\n        this.selectedSubjects != null &&\n        this.selectedYear != null &&\n        this.selectedGroup != null &&\n        this.selectedStudents != null\n      ) &&\n      !(\n        this.selectedChartsType === 'class-subject' &&\n        this.selectedSubjects != null &&\n        this.selectedYear != null &&\n        this.selectedGroups != null\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarksService {\n  constructor(private http: HttpClient) {}\n\n  public getMarks(\n    start: string,\n    end: string,\n    subject_id: number,\n    class_id: number,\n    student_id: number\n  ): Observable<any[]> {\n    return this.http\n      .get<any>(\n        `marks?student_id=${student_id}&class_id=${class_id}&subject_id=${subject_id}\n    &period_start=${start}&period_end=${end}`\n      )\n      .map(response => response.data);\n  }\n\n  public getAvgMarks(\n    student_id: number,\n    start: string,\n    end: string\n  ): Observable<any[]> {\n    return this.http\n      .get<any>(\n        `marks/avg?student_id=${student_id}&period_start=${start}&period_end=${end}`\n      )\n      .map(response => response.data);\n  }\n}\n","import { Title } from '@angular/platform-browser';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class PageTitleService {\n  public constructor(private pageTitleService: Title ) { }\n\n  public setTitle( newTitle: string) {\n    this.pageTitleService.setTitle( newTitle );\n  }\n}\n"],"sourceRoot":""}